import logging
from logging import getLogger

from loguru import logger

from data.config import LOG_FILE_PATH

FORMAT = "[{time}] [{level}] [{file.name}:{line}]  {message}"
ROTATION = "1 month"
COMPRESSION = "zip"

logger.add(
    LOG_FILE_PATH,
    format=FORMAT,
    level="DEBUG",
    rotation=ROTATION,
    compression=COMPRESSION,
)

logger.level("BOT", no=18, color="<green>", icon="üö®")
logger.level("MESSAGE", no=15, color="<blue>", icon="‚úçÔ∏è")
logger.level("CALLBACK", no=15, color="<blue>", icon="üì©")
logger.level("DATABASE", no=17, color="<magenta>", icon="üíæ")

# –£—Ä–æ–≤–Ω–∏ –¥–ª—è —É–º–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
logger.level("AI_MATCH", no=19, color="<cyan>", icon="ü§ù")          # —á—É—Ç—å –≤—ã—à–µ DATABASE(17)
logger.level("AI_MATCH_DEBUG", no=20, color="<blue>", icon="üîç")    # –º–µ–∂–¥—É AI_MATCH(19) –∏ AI_MATCH_REASONS(21)
logger.level("AI_MATCH_REASONS", no=21, color="<magenta>", icon="üß†") # –º–µ–∂–¥—É INFO(20) –∏ SUCCESS(25)
logger.level("AI_MATCH_ERROR", no=35, color="<red>", icon="‚ùå")       # –º–µ–∂–¥—É WARNING(30) –∏ ERROR(40)
logger.level("AI_MATCH_TRY_ERROR", no=36, color="<red>", icon="üîÑ")   # –æ—à–∏–±–∫–∏ –ø–æ–ø—ã—Ç–æ–∫ API
logger.level("AI_MATCH_TRY_ERROR_FALLBACK", no=37, color="<red>", icon="üîÑ") # –æ—à–∏–±–∫–∏ fallback –ø–æ–ø—ã—Ç–æ–∫
logger.level("AI_MATCH_WARNING", no=30, color="<yellow>", icon="‚ö†Ô∏è")  # –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
logger.level("AI_MATCH_JSON_ERROR", no=38, color="<red>", icon="üìÑ")  # –æ—à–∏–±–∫–∏ JSON
logger.level("AI_MATCH_FULL_RESPONSE", no=39, color="<red>", icon="üìÑ") # –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
logger.level("AI_MATCH_ITEM_SKIP", no=40, color="<red>", icon="‚è≠Ô∏è")   # –ø—Ä–æ–ø—É—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
logger.level("AI_MATCH_EMPTY", no=41, color="<red>", icon="üì≠")      # –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
logger.level("AI_MATCH_GIVE_UP", no=42, color="<red>", icon="üè≥Ô∏è")   # —Å–¥–∞–ª–∏—Å—å –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–æ–∫

logger.level("BALANCE_DEBUG", no=22, color="<yellow>", icon="üí∞")    # –º–µ–∂–¥—É AI_MATCH_REASONS(21) –∏ WARNING(30)
logger.level("BALANCE_DEBIT", no=23, color="<red>", icon="ÔøΩÔøΩ")       # —Å–ø–∏—Å–∞–Ω–∏–µ —à–∞–Ω—Å–æ–≤
logger.level("BALANCE_CREDIT", no=24, color="<green>", icon="üíé")    # –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–Ω—Å–æ–≤
logger.level("BALANCE_ERROR", no=35, color="<red>", icon="‚ùå")       # –æ—à–∏–±–∫–∏ –±–∞–ª–∞–Ω—Å–∞

# –£—Ä–æ–≤–Ω–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–∏—Å–∫–∞
logger.level("RESUME_SEARCH_DEBUG", no=25, color="<cyan>", icon="üîÑ")  # –æ—Ç–ª–∞–¥–∫–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
logger.level("GIVE_CHANCE_DEBUG", no=26, color="<blue>", icon="üíù")    # –æ—Ç–ª–∞–¥–∫–∞ –¥–∞—á–∏ —à–∞–Ω—Å–∞
logger.level("BALANCE_DEBIT_ERROR", no=36, color="<red>", icon="üí∏‚ùå") # –æ—à–∏–±–∫–∏ —Å–ø–∏—Å–∞–Ω–∏—è —à–∞–Ω—Å–æ–≤

# –£—Ä–æ–≤–Ω–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
logger.level("STATE_CLEAR", no=27, color="<magenta>", icon="üßπ")       # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π FSM


getLogger("aiogram").addFilter(
    lambda r: r.getMessage().find("Field 'database_user' doesn't exist in") == -1
)

class InterceptHandler(logging.Handler):
    def emit(self, record):
        try:
            level = logger.level(record.levelname).name
        except ValueError:
            level = record.levelno
        logger.opt(depth=6, exception=record.exc_info).log(level, record.getMessage())



for log_name in ("uvicorn", "uvicorn.error", "uvicorn.access", "fastapi"):
    getLogger(log_name).handlers = [InterceptHandler()]
    getLogger(log_name).propagate = False