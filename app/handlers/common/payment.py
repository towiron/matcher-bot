from aiogram import types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, LabeledPrice

from data.config import CLICK_LIVE_TOKEN
from loader import _

from app.routers import common_router

from app.text import message_text as mt

@common_router.message(F.text == "/pay")
async def choose_chance(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üßø –ö—É–ø–∏—Ç—å 1 —à–∞–Ω—Å ‚Äî 1000 —Å—É–º", callback_data="buy_chances:1")],
        [InlineKeyboardButton(text="üßø –ö—É–ø–∏—Ç—å 3 —à–∞–Ω—Å–∞ ‚Äî 3000 —Å—É–º", callback_data="buy_chances:3")],
        [InlineKeyboardButton(text="üßø –ö—É–ø–∏—Ç—å 10 —à–∞–Ω—Å–æ–≤ ‚Äî 10000 —Å—É–º", callback_data="buy_chances:10")],
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–Ω—Å–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:", reply_markup=keyboard)

@common_router.callback_query(F.data.startswith("buy_chances:"))
async def handle_buy_chances(callback: types.CallbackQuery):
    chance_count = int(callback.data.split(":")[1])
    price = chance_count * 1000  # 1000 —Å—É–º –∑–∞ —à–∞–Ω—Å
    title = f"–ü–æ–∫—É–ø–∫–∞ {chance_count} —à–∞–Ω—Å(–æ–≤)"

    prices = [LabeledPrice(label=title, amount=price * 100)]  # —É–º–Ω–æ–∂–∞–µ–º –Ω–∞ 100 (–∫–æ–ø–µ–π–∫–∏)

    await callback.message.answer_invoice(
        title=title,
        description=f"–ü–æ–∫—É–ø–∫–∞ {chance_count} —à–∞–Ω—Å(–æ–≤) –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ.",
        provider_token=CLICK_LIVE_TOKEN,
        currency="UZS",
        prices=prices,
        payload=f"buy:{chance_count}",  # –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ webhook –∏–ª–∏ success_payment
    )
    await callback.answer()

@common_router.pre_checkout_query()
async def pre_checkout_handler(query: types.PreCheckoutQuery):
    await query.answer(ok=True)


@common_router.message(F.successful_payment)
async def on_successful_payment(message: types.Message):
    count = message.successful_payment.invoice_payload.split(":")[1]
    await message.answer(f"‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í—ã –∫—É–ø–∏–ª–∏ {count} —à–∞–Ω—Å(–æ–≤).")
