# syntax=docker/dockerfile:1.7
########################
# 1) Builder
########################
FROM python:3.11-slim AS builder

ARG POETRY_VERSION=2.0.1
ENV PIP_NO_CACHE_DIR=1 \
    POETRY_VIRTUALENVS_CREATE=true \
    POETRY_VIRTUALENVS_IN_PROJECT=true

WORKDIR /app

# Инструменты сборки (с очисткой и кэш-монтами)
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    apt-get update && \
    apt-get install -y --no-install-recommends build-essential && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

RUN pip install --upgrade pip setuptools wheel \
 && pip install "poetry==${POETRY_VERSION}"

COPY pyproject.toml poetry.lock ./
# Ставим только зависимости (без твоего пакета кода)
RUN poetry install --only main --no-interaction --no-ansi

COPY . .
# Если нужно установить и сам проект: убери флаг --only main
# RUN poetry install --no-interaction --no-ansi

########################
# 2) Final
########################
FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PATH="/app/.venv/bin:${PATH}"

WORKDIR /app

# Копируем только виртуальное окружение и код
COPY --from=builder /app/.venv /app/.venv
COPY . .

RUN mkdir -p logs
CMD ["python", "bot-runner.py"]
