[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
aiogram = "^3.21.0"
loguru = "^0.7.3"
environs = "^14.2.0"
redis = "^6.2.0"
sqlalchemy = "^2.0.41"
alembic = "^1.16.4"
asyncpg = "^0.30.0"
greenlet = "^3.2.3"
babel = "^2.17.0"
geopy = "^2.4.1"
matplotlib = "^3.10.3"
pandas = "^2.3.1"
seaborn = "^0.13.2"
fastapi = "^0.116.1"
uvicorn = "^0.35.0"
faker = "^37.5.3"
python-multipart = "^0.0.20"
openai = "^1.99.6"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.8"
pyright = "^1.1.403"

[project]
name = "matcher"
requires-python = ">=3.10,<4.0"

[build-system]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["."]
line-length = 100
fix = true

[tool.ruff.lint]
select = ["E", "F", "B"]
ignore = ["E501"]  # если действительно хочешь игнорировать длину строк

# === вот сюда переносим твой pyrightconfig.json ===
[tool.pyright]
include = ["app", "database", "utils"]
exclude = ["**/.venv", "**/.mypy_cache", "**/__pycache__"]
pythonVersion = "3.10"
typeCheckingMode = "off"
useLibraryCodeForTypes = true

reportAttributeAccessIssue = "error"
reportGeneralTypeIssues = "none"
reportMissingImports = "none"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportMissingTypeStubs = "none"
